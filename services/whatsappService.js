/* const venom = require("venom-bot");

let client;
let estado = "No iniciado";
let callbackQR;
let callbackLog;

function iniciarWhatsApp() {
  venom
    .create({
      session: "bodas",
      multidevice: true,
      headless: true,
    })
    .then((cl) => {
      client = cl;
      estado = "Conectado";
      callbackLog?.("‚úÖ Sesi√≥n conectada");

      // Aqu√≠ puedes a√±adir polling al backend
    })
    .catch((err) => {
      estado = "Error";
      callbackLog?.("‚ùå Error al iniciar sesi√≥n: " + err.message);
    });
}

function estadoSesion() {
  return estado;
}

function onQRCode(callback) {
  callbackQR = callback;
}

function onMensaje(callback) {
  callbackLog = callback;
}

module.exports = {
  iniciarWhatsApp,
  estadoSesion,
  onQRCode,
  onMensaje,
};
 */

const venom = require("venom-bot");

let client;
let estado = "No iniciado";

function iniciarWhatsApp() {
  venom
    .create({
      session: "bodas",
      multidevice: true,
      headless: false,
      folderNameToken: "session",
    })
    .then((cl) => {
      client = cl;
      estado = "Conectado";
      console.log("‚úÖ Sesi√≥n iniciada");

      // Aqu√≠ puedes cambiar por tu n√∫mero o el de prueba
      const telefonoDestino = "34676983429@c.us"; // n√∫mero con prefijo pa√≠s y sin +
      const mensaje =
        "¬°Hola! Este es un mensaje de prueba desde la app de escritorio üéâ";

      client
        .sendText(telefonoDestino, mensaje)
        .then(() => {
          console.log("‚úÖ Mensaje enviado correctamente");
        })
        .catch((err) => {
          console.error("‚ùå Error al enviar el mensaje:", err.message);
        });
    })
    .catch((err) => {
      estado = "Error";
      console.error("‚ùå Error al iniciar sesi√≥n:", err.message);
    });
}

function estadoSesion() {
  return estado;
}

function onQRCode(callback) {
  // Aqu√≠ podr√≠as emitir el QR si lo necesitas
}

function onMensaje(callback) {
  // Aqu√≠ podr√≠as emitir mensajes al frontend si lo necesitas
}

module.exports = {
  iniciarWhatsApp,
  estadoSesion,
  onQRCode,
  onMensaje,
};
